{"version":3,"sources":["Components/Shared/Image/Image.jsx","api/socket.js","utils/EventsObject.js","utils/helpers.js","BotsServer/BotsServer.ts","Server/OfflineServer.ts","Server/OnlineServer.ts","api/API.ts","Components/Shared/Card/Card.jsx","utils/hooks.ts","Components/Game/TableStack/TableStack.jsx","Components/Game/CardsRow/CardsRow.jsx","Components/Game/PlayerStack/PlayerStack.jsx","Components/Game/CardsColumn/CardsColumn.jsx","Components/Game/LeftStack/LeftStack.jsx","Components/Game/RightStack/RightStack.jsx","Components/Game/TopStack/TopStack.jsx","Components/Game/DrawingStack/FrontCards.jsx","stores/features/gameSlice.ts","utils/audio.js","Components/Game/DrawingStack/DrawingStack.jsx","Components/Shared/Avatar/Avatar.jsx","Components/Shared/Button/Button.jsx","Components/Game/Scoreboard/Scoreboard.jsx","Components/Game/Game.tsx","Components/Shared/Paper/Paper.jsx","Components/Shared/TextField/TextField.jsx","Components/Shared/Typography/Typography.jsx","Components/CreateUser/ReChoiceIcon.jsx","Components/CreateUser/CreateUser.jsx","Components/MainMenu/MainMenu.jsx","Components/Shared/Switch/Switch.jsx","Components/CreateServer/CreateServer.jsx","Components/Shared/Table/Table.jsx","Components/JoinServer/JoinServer.jsx","Components/WaitingLobby/Loding.jsx","Components/WaitingLobby/Lobby.jsx","stores/store.ts","Components/StartPage/StartPage.jsx","utils/loader.ts","Components/Shared/Loading/Loading.jsx","Components/Shared/ErrorBoundary/ErrorBoundary.jsx","App.js","index.js"],"names":["Root","styled","div","props","ratio","Image","src","alt","socket","io","connect","reconnectionAttempts","EventsObject","events","addEventListener","name","handler","this","hasOwnProperty","push","removeEventListener","index","indexOf","splice","args","evs","l","length","i","shuffle","array","randomIndex","currentIndex","Math","floor","random","wrapMod","n","len","BotsServer","numberOfPlayers","players","curPlayer","direction","tableStk","drawingStk","sumDrawing","lastPlayerDrew","playersFinished","gameRunning","botTimeout","player","playerId","toString","id","cards","numToAdd","bot","data","isBot","fireEvent","setTimeout","start","forEach","idx","slice","find","p","map","moveBot","draw","cardId","card","moveEventObj","nxtPlayer","getCardById","canPlayCard","drawCnt","cardsToDraw","concat","getNextPlayer","action","unshift","filter","c","finishGame","move","playersFinishingOrder","init","oldCard","newCard","haveToDraw","isNewDawingCard","color","undefined","digit","OfflineServer","_botsServer","a","serverName","serverPassword","Promise","res","rej","emit","getPlayer","err","serverId","joinPlayer","addBots","ready","cb","removeAllListeners","localStorage","getItem","img","OnlineServer","servers","console","log","on","off","API","isOnline","_server","setOnlineMode","connected","getServers","getServerPlayers","createServer","joinServer","emitReady","leaveServer","onPlayersUpdated","unsub","onGameInit","onMove","onPlayerLeft","onFinishGame","disableShadow","playable","selectable","Card","flip","rotationY","layoutId","as","motion","className","initial","rotateY","abs","y","whileHover","transition","duration","animate","ease","onClick","useDispatch","useReduxDispatch","useSelector","useReduxSelector","TableStack","tableStack","state","game","width","highlight","cardsCnt","CardsRow","cardProps","layout","PlayerStack","currentPlayer","CardsColumn","LeftStack","RightStack","TopStack","FrontCards","React","memo","Array","fill","_","style","transform","cardLayoutIdIdx","generateDrawingCards","cnt","gameSlice","createSlice","initialState","drawingStack","inGame","reducers","setPlayerId","payload","startingCards","lastPlayerDrawed","playersFinal","myIdx","cardsToDistribute","forPlayer","orderOffset","isNullOrUndefined","stopGame","setInLobby","inLobby","moveCard","nextPlayer","curPlayerObj","newCards","shouldFlip","cardToMove","current","nextPlayre","movePlayer","myTurn","actions","_GameAudio","musicVolume","effectsVolume","audioTracks","onload","Object","values","url","audio","Audio","Error","musicPlaying","volume","play","loop","reps","newVolume","GameAudio","variants","x","idleCenter","idleCorner","idleCornerDisabled","hover","scale","canHover","DrawingStack","dispatch","useState","gameStarted","setGameStarted","useEffect","playAudio","Cavatar","Avatar","seed","Cbutton","MuiButton","Button","children","href","navigate","useNavigate","disabled","Scoreboard","variant","textAlign","fontWeight","mb","Grid","container","justifyContent","mt","to","Game","finished","setFinished","playersOrder","setPlayersOrder","timeoutReady","clearTimeout","AnimateSharedLayout","replace","Paper","APaper","opacity","exit","alignItems","item","xs","md","lg","CtextField","input","TextField","Ctypography","MuiTypography","Typography","ReChoiceIcon","focusable","class","role","xmlns","viewBox","d","CreateUser","playerName","setPlayerName","JSON","parse","imgSeed","setImgSeed","setItem","spacing","type","placeholder","value","onChange","e","target","pad","sx","height","padding","MainMenu","onPlayOnline","playOnline","onPlayOffline","fontSize","display","rel","switchUnstyledClasses","track","thumb","focusVisible","checked","UnstyledSwitches","SwitchUnstyled","component","componentsProps","defaultChecked","CreateServer","setServerName","setServerPassword","isPrivate","setIsPrivate","handleCreateServer","Stack","label","sm","marginTop","gap","textShadow","CTableContainer","CTableHead","CTableCell","CTableBody","Table","CTableRow","JoinServer","showPrivate","setShowPrivate","selectedServer","setSelectedServer","password","setPassword","selectOne","setSelectOne","setServers","interval","setInterval","clearInterval","handleJoinServer","Checkbox","server","backgroundColor","border","borderWidth","borderRadius","boxShadow","background","cntPlayers","CLoading","span","Loding","Span","Lobby","setPlayers","location","useLocation","timeout","unsubInit","serverPlayers","pathname","flexWrap","store","configureStore","reducer","StartPage","mounted","setMounted","stiffness","h3","repeat","Infinity","times","delay","onAnimationComplete","Loader","imgs","audios","music","totalCnt","loadedCnt","onProgress","bind","keys","preload","preloadImage","_img","error","Loading","onLoaded","percentage","setPercentage","completed","setCompleted","load","round","ErrorBoundary","errorInfo","setState","Component","App","loadingAssets","setLoadingAssets","playMusic","AnimatePresence","exitBeforeEnter","path","element","key","ReactDOM","render","StrictMode","basename","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b5848bcd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  padding-top: ${(props) => props.ratio * 100}%;\r\n\r\n  img {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    object-fit: cover;\r\n    cursor: inherit;\r\n  }\r\n`;\r\n\r\nexport default function Image({ src, alt = \" \", ratio = 9 / 16, ...props }) {\r\n  return (\r\n    <Root ratio={ratio} {...props}>\r\n      <img src={src} alt={alt} />\r\n    </Root>\r\n  );\r\n}\r\n","import io from \"socket.io-client\";\r\n\r\nexport const socket = io.connect(\"http://localhost:5000\");\r\n\r\nsocket.reconnectionAttempts = 3;\r\n","export class EventsObject {\r\n  events = {};\r\n\r\n  addEventListener = function (name, handler) {\r\n    if (this.events.hasOwnProperty(name)) this.events[name].push(handler);\r\n    else this.events[name] = [handler];\r\n  };\r\n\r\n  removeEventListener = function (name, handler) {\r\n    /* This is a bit tricky, because how would you identify functions?\r\n           This simple solution should work if you pass THE SAME handler. */\r\n    if (!this.events.hasOwnProperty(name)) return;\r\n\r\n    var index = this.events[name].indexOf(handler);\r\n    if (index !== -1) this.events[name].splice(index, 1);\r\n  };\r\n\r\n  removeAllListeners() {\r\n    this.events = {};\r\n  }\r\n\r\n  fireEvent(name, ...args) {\r\n    if (!this.events.hasOwnProperty(name)) return;\r\n\r\n    if (!args) args = [];\r\n\r\n    var evs = this.events[name],\r\n      l = evs.length;\r\n\r\n    for (var i = 0; i < l; i++) {\r\n      evs[i](...args);\r\n    }\r\n  }\r\n}\r\n","export function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport function wrapMod(n, len) {\r\n  return (n + len) % len;\r\n}\r\n","import { EventsObject } from \"../utils/EventsObject\";\r\nimport { shuffle, wrapMod } from \"../utils/helpers\";\r\nimport { Card, Player } from \"../utils/interfaces\";\r\nimport data from \"./data.json\";\r\n\r\nexport interface IMoveEvent {\r\n  curPlayer: number;\r\n  nxtPlayer: number;\r\n  card?: Card;\r\n  draw?: number;\r\n  cardsToDraw?: Card[];\r\n}\r\n\r\nexport interface IStartEvent {\r\n  cards: Card[];\r\n  players: Player[];\r\n  playerId: string;\r\n}\r\n\r\nexport default class BotsServer extends EventsObject {\r\n  players: Player[] = [];\r\n  curPlayer = 0;\r\n  direction = 1;\r\n  tableStk: Card[] = [];\r\n  drawingStk: Card[] = [];\r\n  sumDrawing = 0;\r\n  lastPlayerDrew = false;\r\n  playersFinished: number[] = [];\r\n  gameRunning = false;\r\n  numberOfPlayers = 4;\r\n\r\n  botTimeout = null;\r\n\r\n  constructor(numberOfPlayers = 4) {\r\n    super();\r\n    this.numberOfPlayers = numberOfPlayers;\r\n  }\r\n\r\n  init() {\r\n    this.players = [];\r\n    this.curPlayer = 0;\r\n    this.direction = 1;\r\n    this.tableStk = [];\r\n    this.drawingStk = [];\r\n    this.sumDrawing = 0;\r\n    this.playersFinished = [];\r\n    this.lastPlayerDrew = false;\r\n    this.gameRunning = false;\r\n  }\r\n\r\n  joinPlayer(player: Player) {\r\n    const playerId = this.players.length.toString();\r\n\r\n    this.players.push({\r\n      ...player,\r\n      id: playerId,\r\n      cards: [],\r\n    });\r\n\r\n    return playerId;\r\n  }\r\n\r\n  addBots() {\r\n    const numToAdd = this.numberOfPlayers - this.players.length;\r\n    for (let i = 0; i < numToAdd; i++) {\r\n      const bot = data.players[i];\r\n      const playerId = this.players.length.toString();\r\n      this.players.push({\r\n        ...bot,\r\n        id: playerId,\r\n        cards: [],\r\n        isBot: true,\r\n      });\r\n    }\r\n    this.fireEvent(\"players-changed\", this.players);\r\n    if (this.players.length === this.numberOfPlayers)\r\n      setTimeout(() => {\r\n        this.start();\r\n      }, 1000);\r\n  }\r\n\r\n  start() {\r\n    const cards = [...data.cards] as Card[];\r\n    shuffle(cards);\r\n    shuffle(this.players);\r\n    const NUM_CARDS = 7;\r\n    this.players.forEach((player, idx) => {\r\n      player.cards = cards.slice(idx * NUM_CARDS, (idx + 1) * NUM_CARDS);\r\n    });\r\n    this.drawingStk = cards.slice(\r\n      this.players.length * NUM_CARDS,\r\n      cards.length\r\n    );\r\n\r\n    this.fireEvent(\"game-init\", {\r\n      cards: this.players.find((p) => !p.isBot)?.cards,\r\n      players: this.players.map((p) => ({ ...p, cards: [] })),\r\n    });\r\n  }\r\n\r\n  ready() {\r\n    if (this.players[this.curPlayer].isBot) this.moveBot();\r\n  }\r\n\r\n  move(draw: boolean | null, cardId: string | null) {\r\n    let moveEventObj: IMoveEvent = { nxtPlayer: 0, curPlayer: 0 };\r\n    let card: Card | undefined;\r\n\r\n    if (cardId) card = getCardById(cardId) as Card;\r\n\r\n    if (card && !canPlayCard(this.tableStk[0], card, this.lastPlayerDrew))\r\n      return false;\r\n\r\n    if (draw) {\r\n      let drawCnt = 1;\r\n      if (this.sumDrawing) {\r\n        drawCnt = this.sumDrawing;\r\n        this.sumDrawing = 0;\r\n      }\r\n\r\n      moveEventObj.draw = drawCnt;\r\n      if (drawCnt + 1 > this.drawingStk.length) {\r\n        this.drawingStk = shuffle(this.tableStk.slice(5, this.tableStk.length));\r\n        this.tableStk = this.tableStk.slice(0, 5);\r\n      }\r\n\r\n      moveEventObj.cardsToDraw = this.drawingStk.slice(0, drawCnt);\r\n      this.players[this.curPlayer].cards = this.drawingStk\r\n        .slice(0, drawCnt)\r\n        .concat(this.players[this.curPlayer].cards);\r\n\r\n      this.drawingStk = this.drawingStk.slice(drawCnt, this.drawingStk.length);\r\n      this.lastPlayerDrew = true;\r\n    }\r\n\r\n    let nxtPlayer = this.getNextPlayer(card);\r\n\r\n    moveEventObj.curPlayer = this.curPlayer;\r\n    moveEventObj.nxtPlayer = nxtPlayer;\r\n\r\n    if (card) {\r\n      if (card.action === \"draw two\") this.sumDrawing += 2;\r\n      if (card.action === \"draw four\") this.sumDrawing += 4;\r\n\r\n      this.tableStk.unshift(card);\r\n      moveEventObj.card = card;\r\n      this.players[this.curPlayer].cards = this.players[\r\n        this.curPlayer\r\n      ].cards.filter((c) => c.id !== card?.id);\r\n      this.lastPlayerDrew = false;\r\n\r\n      // Check if game finished\r\n      if (this.players[this.curPlayer].cards.length === 0)\r\n        this.playersFinished.push(this.curPlayer);\r\n      if (this.playersFinished.length === this.players.length - 1) {\r\n        this.playersFinished.push(nxtPlayer);\r\n        this.finishGame();\r\n        this.fireEvent(\"move\", moveEventObj as IMoveEvent);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.curPlayer = nxtPlayer;\r\n\r\n    this.fireEvent(\"move\", moveEventObj as IMoveEvent);\r\n\r\n    if (this.players[this.curPlayer].isBot) this.moveBot();\r\n  }\r\n\r\n  getNextPlayer(card?: Card) {\r\n    let nxtPlayer = this.curPlayer;\r\n\r\n    if (card?.action === \"reverse\") this.direction *= -1;\r\n\r\n    //Move to next player ( if not wild card )\r\n    if (card?.action === \"skip\")\r\n      nxtPlayer = wrapMod(\r\n        this.curPlayer + 2 * this.direction,\r\n        this.players.length\r\n      );\r\n    else if (card?.action !== \"wild\")\r\n      nxtPlayer = wrapMod(\r\n        this.curPlayer + 1 * this.direction,\r\n        this.players.length\r\n      );\r\n\r\n    //if nxtPlayer is out of the game (no cards left with him)\r\n    while (this.players[nxtPlayer].cards.length === 0) {\r\n      nxtPlayer = wrapMod(nxtPlayer + 1 * this.direction, this.players.length);\r\n    }\r\n\r\n    return nxtPlayer;\r\n  }\r\n\r\n  moveBot() {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < this.players[this.curPlayer].cards.length; i++) {\r\n        const card = this.players[this.curPlayer].cards[i];\r\n\r\n        if (canPlayCard(this.tableStk[0], card, this.lastPlayerDrew))\r\n          return this.move(false, card.id as string);\r\n      }\r\n\r\n      return this.move(true, null);\r\n    }, 1500);\r\n  }\r\n\r\n  finishGame() {\r\n    const playersFinishingOrder = this.playersFinished.map(\r\n      (idx) => this.players[idx]\r\n    );\r\n\r\n    this.init();\r\n    this.fireEvent(\"finish-game\", playersFinishingOrder);\r\n  }\r\n}\r\n\r\nexport function canPlayCard(\r\n  oldCard: Card,\r\n  newCard: Card,\r\n  lastPlayerDrew: boolean\r\n) {\r\n  const isOldDawingCard =\r\n    oldCard?.action && oldCard.action.indexOf(\"draw\") !== -1;\r\n  const haveToDraw = isOldDawingCard && !lastPlayerDrew;\r\n  const isNewDawingCard =\r\n    newCard?.action && newCard.action.indexOf(\"draw\") !== -1;\r\n\r\n  //No Card Played Yet\r\n  if (!oldCard) return true;\r\n\r\n  if (!haveToDraw && newCard.action === \"wild\") return true;\r\n\r\n  if (newCard.action === \"draw four\") return true;\r\n\r\n  if (oldCard.color === \"black\" && !haveToDraw) return true;\r\n\r\n  if (haveToDraw && isNewDawingCard) return true;\r\n\r\n  if (!haveToDraw && oldCard.color === newCard.color) return true;\r\n\r\n  if (oldCard.digit !== undefined && oldCard.digit === newCard.digit)\r\n    return true;\r\n\r\n  return false;\r\n}\r\n\r\nconst getCardById = (id: string) => data.cards.find((c) => c.id === id);\r\n","import { GameServer, Player, Card } from \"../utils/interfaces\";\r\nimport { ServerInterface } from \"./ServerInterface\";\r\nimport { socket } from \"../api/socket\";\r\nimport BotsServer from \"../BotsServer/BotsServer\";\r\n\r\nexport class OfflineServer implements ServerInterface {\r\n  player?: Player;\r\n\r\n  _botsServer: BotsServer;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    this._botsServer = new BotsServer();\r\n  }\r\n\r\n  async getServers(): Promise<GameServer[]> {\r\n    return [];\r\n  }\r\n\r\n  async getServerPlayers(): Promise<Player[]> {\r\n    return this._botsServer.players.map((p) => ({ ...p, cards: [] }));\r\n  }\r\n\r\n  async createServer(\r\n    serverName: string,\r\n    serverPassword?: string\r\n  ): Promise<string> {\r\n    return new Promise((res, rej) => {\r\n      socket.emit(\r\n        \"create-server\",\r\n        { serverName, serverPassword, player: this.getPlayer() },\r\n        (err: any, playerId: string) => {\r\n          if (err) return rej(err);\r\n          res(playerId);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async joinServer(serverId: string, serverPassword?: string): Promise<string> {\r\n    this._botsServer = new BotsServer();\r\n    this._botsServer.init();\r\n    const playerId = this._botsServer.joinPlayer(this.getPlayer());\r\n    setTimeout(() => this._botsServer.addBots(), 2000);\r\n    return playerId;\r\n  }\r\n\r\n  emitReady(): void {\r\n    this._botsServer.ready();\r\n  }\r\n\r\n  leaveServer(): void {\r\n    this._botsServer = null as any;\r\n  }\r\n  async move(draw: boolean | null, cardId: string): Promise<void> {\r\n    this._botsServer.move(draw, cardId);\r\n  }\r\n\r\n  onPlayersUpdated(cb: (players: Player[]) => void): () => void {\r\n    this._botsServer.addEventListener(\"players-changed\", cb);\r\n    return () => this._botsServer.removeEventListener(\"players-changed\", cb);\r\n  }\r\n\r\n  onGameInit(\r\n    cb: (data: { players: Player[]; cards: Card[] }) => void\r\n  ): () => void {\r\n    this._botsServer.addEventListener(\"game-init\", cb);\r\n    return () => this._botsServer.removeEventListener(\"game-init\", cb);\r\n  }\r\n\r\n  onMove(\r\n    cb: (data: {\r\n      nxtPlayer: number;\r\n      card: Card;\r\n      draw?: number | undefined;\r\n      cardsToDraw?: Card[] | undefined;\r\n    }) => void\r\n  ): () => void {\r\n    this._botsServer.addEventListener(\"move\", cb);\r\n    return () => this._botsServer.removeEventListener(\"move\", cb);\r\n  }\r\n\r\n  onPlayerLeft(cb: () => void): () => void {\r\n    this._botsServer.addEventListener(\"player-left\", cb);\r\n    return () => this._botsServer.removeEventListener(\"player-left\", cb);\r\n  }\r\n\r\n  onFinishGame(cb: (playersOrdered: Player[]) => void): () => void {\r\n    this._botsServer.addEventListener(\"finish-game\", cb);\r\n    return () => this._botsServer.removeEventListener(\"finish-game\", cb);\r\n  }\r\n\r\n  removeAllListeners() {\r\n    this._botsServer.removeAllListeners();\r\n  }\r\n\r\n  getPlayer(): Player {\r\n    if (this.player) return this.player;\r\n    this.player = {} as Player;\r\n    this.player.name = localStorage.getItem(\"playerName\") as string;\r\n    this.player.img = localStorage.getItem(\"playerImg\") as string;\r\n    return this.player;\r\n  }\r\n}\r\n","import { GameServer, Player, Card } from \"../utils/interfaces\";\r\nimport { ServerInterface } from \"./ServerInterface\";\r\nimport { socket } from \"../api/socket\";\r\n\r\nexport class OnlineServer implements ServerInterface {\r\n  player?: Player;\r\n\r\n  getServers(): Promise<GameServer[]> {\r\n    return new Promise((res, rej) => {\r\n      socket.emit(\"get-servers\", null, (err: any, servers: GameServer[]) => {\r\n        if (err) return rej(err);\r\n        console.log(servers);\r\n\r\n        res(servers);\r\n      });\r\n    });\r\n  }\r\n  getServerPlayers(): Promise<Player[]> {\r\n    return new Promise((res, rej) => {\r\n      socket.emit(\"get-server-players\", null, (err: any, players: Player[]) => {\r\n        if (err) return rej(err);\r\n        res(players);\r\n      });\r\n    });\r\n  }\r\n  createServer(serverName: string, serverPassword?: string): Promise<string> {\r\n    return new Promise((res, rej) => {\r\n      socket.emit(\r\n        \"create-server\",\r\n        { serverName, serverPassword, player: this.getPlayer() },\r\n        (err: any, playerId: string) => {\r\n          if (err) return rej(err);\r\n          res(playerId);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  joinServer(serverId: string, serverPassword?: string): Promise<string> {\r\n    return new Promise((res, rej) => {\r\n      socket.emit(\r\n        \"join-server\",\r\n        { serverId, serverPassword, player: this.getPlayer() },\r\n        (err: any, playerId: string) => {\r\n          if (err) {\r\n            return rej(err);\r\n          }\r\n          setTimeout(() => {\r\n            // socket.emit(\"add-bots\");\r\n          }, 2000);\r\n          res(playerId);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  emitReady(): void {\r\n    socket.emit(\"start-game\");\r\n  }\r\n  leaveServer(): void {\r\n    socket.emit(\"leave-server\");\r\n    this.removeAllListeners();\r\n  }\r\n  move(draw: boolean | null, cardId: string): Promise<void> {\r\n    return new Promise((res, rej) => {\r\n      socket.emit(\"move\", { cardId, draw }, (err: any) => {\r\n        if (err) return rej(err);\r\n        res();\r\n      });\r\n    });\r\n  }\r\n  onPlayersUpdated(cb: (players: Player[]) => void): () => void {\r\n    socket.on(\"players-changed\", cb);\r\n    return () => socket.off(\"players-changed\", cb);\r\n  }\r\n\r\n  onGameInit(\r\n    cb: (data: { players: Player[]; cards: Card[] }) => void\r\n  ): () => void {\r\n    socket.on(\"init-game\", cb);\r\n    return () => socket.off(\"init-game\", cb);\r\n  }\r\n  onMove(\r\n    cb: (data: {\r\n      nxtPlayer: number;\r\n      card: Card;\r\n      draw?: number | undefined;\r\n      cardsToDraw?: Card[] | undefined;\r\n    }) => void\r\n  ): () => void {\r\n    socket.on(\"move\", cb);\r\n    return () => socket.off(\"move\", cb);\r\n  }\r\n\r\n  onPlayerLeft(cb: () => void): () => void {\r\n    socket.on(\"player-left\", cb);\r\n    return () => socket.off(\"player-left\", cb);\r\n  }\r\n\r\n  onFinishGame(cb: (playersOrdered: Player[]) => void): () => void {\r\n    socket.on(\"finished-game\", cb);\r\n    return () => socket.off(\"finished-game\", cb);\r\n  }\r\n\r\n  removeAllListeners() {\r\n    socket.removeAllListeners();\r\n  }\r\n\r\n  getPlayer(): Player {\r\n    if (this.player) return this.player;\r\n    this.player = {} as Player;\r\n    this.player.name = localStorage.getItem(\"playerName\") as string;\r\n    this.player.img = localStorage.getItem(\"playerImg\") as string;\r\n    return this.player;\r\n  }\r\n}\r\n","import { OfflineServer } from \"../Server/OfflineServer\";\r\nimport { OnlineServer } from \"../Server/OnlineServer\";\r\nimport { ServerInterface } from \"../Server/ServerInterface\";\r\nimport { Player, GameServer, Card } from \"../utils/interfaces\";\r\nimport { socket } from \"./socket\";\r\n\r\nexport class _API implements ServerInterface {\r\n  isOnline = false;\r\n  _server: ServerInterface;\r\n  player?: Player;\r\n\r\n  constructor() {\r\n    if (this.isOnline) this._server = new OnlineServer();\r\n    else this._server = new OfflineServer();\r\n\r\n    socket.on(\"connect\", () => {\r\n      this.setOnlineMode(socket.connected);\r\n    });\r\n  }\r\n\r\n  setOnlineMode(isOnline: boolean) {\r\n    this.isOnline = isOnline;\r\n  }\r\n\r\n  playOnline(isOnline: boolean) {\r\n    if (isOnline) this._server = new OnlineServer();\r\n    else this._server = new OfflineServer();\r\n  }\r\n\r\n  getServers(): Promise<GameServer[]> {\r\n    console.log(this._server);\r\n\r\n    return this._server.getServers();\r\n  }\r\n  getServerPlayers(): Promise<Player[]> {\r\n    return this._server.getServerPlayers();\r\n  }\r\n  createServer(serverName: string, serverPassword?: string): Promise<string> {\r\n    return this._server.createServer(serverName, serverPassword);\r\n  }\r\n  joinServer(serverId: string, serverPassword?: string): Promise<string> {\r\n    return this._server.joinServer(serverId, serverPassword);\r\n  }\r\n\r\n  emitReady(): void {\r\n    this._server.emitReady();\r\n  }\r\n  leaveServer(): void {\r\n    this._server.leaveServer();\r\n  }\r\n  move(draw: boolean | null, cardId: string): Promise<void> {\r\n    return this._server.move(draw, cardId);\r\n  }\r\n  onPlayersUpdated(cb: (players: Player[]) => void): () => void {\r\n    return this._server.onPlayersUpdated(cb);\r\n  }\r\n  onGameInit(\r\n    cb: (data: { players: Player[]; cards: Card[] }) => void\r\n  ): () => void {\r\n    const unsub = this._server.onGameInit(cb);\r\n    console.log(this._server);\r\n    return unsub;\r\n  }\r\n  onMove(\r\n    cb: (data: {\r\n      nxtPlayer: number;\r\n      card: Card;\r\n      draw?: number | undefined;\r\n      cardsToDraw?: Card[] | undefined;\r\n    }) => void\r\n  ): () => void {\r\n    return this._server.onMove(cb);\r\n  }\r\n  onPlayerLeft(cb: () => void): () => void {\r\n    return this._server.onPlayerLeft(cb);\r\n  }\r\n  onFinishGame(cb: (playersOrdered: Player[]) => void): () => void {\r\n    return this._server.onFinishGame(cb);\r\n  }\r\n  getPlayer(): Player {\r\n    return this._server.getPlayer();\r\n  }\r\n}\r\n\r\nconst API = new _API();\r\n\r\nexport default API;\r\n","import styled from \"styled-components\";\r\nimport Image from \"../Image/Image\";\r\nimport { motion } from \"framer-motion\";\r\nimport API from \"../../../api/API\";\r\n\r\nconst Root = styled.div`\r\n  --color: var(--${(props) => props.color});\r\n\r\n  /* overflow: hidden; */\r\n  padding-top: 141%;\r\n  border-radius: calc(var(--cardWidth) / 10);\r\n\r\n  box-shadow: ${(props) =>\r\n    !props.disableShadow ? \"0 0 10px #292727\" : \"none\"};\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n\r\n  cursor: ${(props) => (props.playable ? \"pointer\" : \"inherit\")};\r\n  filter: ${(props) =>\r\n    props.selectable && !props.playable ? \"contrast(.5)\" : \"none\"};\r\n\r\n  .front,\r\n  .back {\r\n    border-radius: calc(var(--cardWidth) / 10);\r\n    background: whitesmoke;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    backface-visibility: hidden;\r\n  }\r\n\r\n  .front {\r\n    transform: translateZ(1px);\r\n    font-family: sans-serif;\r\n\r\n    .value {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      color: var(--color);\r\n      font-size: var(--fontBig);\r\n      font-family: sans-serif !important;\r\n      font-weight: bold;\r\n      text-shadow: 5px 5px black;\r\n      -webkit-text-stroke: black 2px;\r\n    }\r\n\r\n    .card-icon {\r\n      width: 80%;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .value-small {\r\n      position: absolute;\r\n      color: white;\r\n      -webkit-text-stroke: black 1.5px;\r\n      font-weight: bold;\r\n      font-size: var(--fontSmall);\r\n      font-style: italic;\r\n      font-family: sans-serif !important;\r\n\r\n      &.value-tl {\r\n        top: 14px;\r\n        left: 22px;\r\n      }\r\n\r\n      &.value-br {\r\n        bottom: 14px;\r\n        right: 22px;\r\n        transform: scale(-1);\r\n      }\r\n\r\n      @media screen and (max-width: 1000px) {\r\n        -webkit-text-stroke: black 1px;\r\n\r\n        .value {\r\n          text-shadow: 3px 3px black;\r\n        }\r\n\r\n        &.value-tl {\r\n          top: 9px;\r\n          left: 13px;\r\n        }\r\n\r\n        &.value-br {\r\n          bottom: 9px;\r\n          right: 13px;\r\n          transform: scale(-1);\r\n        }\r\n      }\r\n    }\r\n\r\n    .icon-small {\r\n      position: absolute;\r\n      width: 20%;\r\n      &.icon-tl {\r\n        top: 25px;\r\n        left: 20px;\r\n      }\r\n\r\n      &.icon-br {\r\n        bottom: 25px;\r\n        right: 20px;\r\n        transform: scale(-1);\r\n      }\r\n      @media screen and (max-width: 1000px) {\r\n        &.icon-tl {\r\n          top: 14px;\r\n          left: 11px;\r\n        }\r\n\r\n        &.icon-br {\r\n          bottom: 14px;\r\n          right: 11px;\r\n          transform: scale(-1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .back {\r\n    transform: rotateY(180deg);\r\n  }\r\n`;\r\n\r\nexport default function Card({\r\n  id = \"\",\r\n  color = \"\",\r\n  digit,\r\n  action = \"\",\r\n  flip = false,\r\n  rotationY = 180,\r\n  layoutId,\r\n  selectable,\r\n  playable,\r\n  disableShadow = false,\r\n}) {\r\n  const onClick = () => {\r\n    if (playable) API.move(false, id);\r\n  };\r\n\r\n  const getFrontContent = () => {\r\n    if (color === \"black\" && action === \"wild\")\r\n      return <Image src={`assets/images/wild.png`} ratio={590 / 418} />;\r\n\r\n    if (color === \"black\")\r\n      return (\r\n        <>\r\n          <Image src={`assets/images/front-${color}.png`} ratio={590 / 418} />\r\n          <img src=\"assets/images/draw4.png\" className=\"card-icon\" alt=\"\" />\r\n          <img\r\n            className=\"icon-small icon-tl\"\r\n            src={`assets/images/${action}-blank.png`}\r\n            alt=\"\"\r\n          />\r\n          <img\r\n            className=\"icon-small icon-br\"\r\n            src={`assets/images/${action}-blank.png`}\r\n            alt=\"\"\r\n          />\r\n        </>\r\n      );\r\n\r\n    if (action)\r\n      return (\r\n        <>\r\n          <Image src={`assets/images/front-${color}.png`} ratio={590 / 418} />\r\n          <img\r\n            src={`assets/images/${action}-${color}.png`}\r\n            className=\"card-icon\"\r\n            alt=\"\"\r\n          />\r\n          <img\r\n            className=\"icon-small icon-tl\"\r\n            src={`assets/images/${action}-blank.png`}\r\n            alt=\"\"\r\n          />\r\n          <img\r\n            className=\"icon-small icon-br\"\r\n            src={`assets/images/${action}-blank.png`}\r\n            alt=\"\"\r\n          />\r\n        </>\r\n      );\r\n    return (\r\n      <>\r\n        <Image src={`assets/images/front-${color}.png`} ratio={590 / 418} />\r\n        <p className=\"value\">{digit}</p>\r\n        <p className=\"value-small value-tl\">{digit}</p>\r\n        <p className=\"value-small value-br\">{digit}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Root\r\n      as={motion.div}\r\n      color={color}\r\n      className=\"noselect\"\r\n      layoutId={layoutId}\r\n      initial={{\r\n        rotateY: flip ? Math.abs(180 - rotationY) : rotationY,\r\n        y: 0,\r\n      }}\r\n      whileHover={\r\n        playable\r\n          ? { y: -40, transition: { duration: 0.3 } }\r\n          : { y: 0, transition: { duration: 0.3 } }\r\n      }\r\n      animate={{ rotateY: rotationY, y: 0 }}\r\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n      selectable={selectable}\r\n      playable={playable}\r\n      disableShadow={disableShadow}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"front\">{getFrontContent()}</div>\r\n      <div className=\"back\">\r\n        <Image src={`assets/images/backside.png`} ratio={590 / 418} />\r\n      </div>\r\n    </Root>\r\n  );\r\n}\r\n","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as useReduxDispatch,\r\n  useSelector as useReduxSelector,\r\n} from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../stores/store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n","import styled from \"styled-components\";\r\nimport Card from \"../../Shared/Card/Card\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  --cardWidth: var(--cardWidthBigger);\r\n\r\n  .card-container {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nexport default function TableStack() {\r\n  const tableStack = useSelector((state) => state.game.tableStack);\r\n\r\n  return (\r\n    <Root>\r\n      {tableStack.map((card) => (\r\n        <div className=\"card-container\" key={card.layoutId}>\r\n          <Card\r\n            layoutId={card.layoutId}\r\n            color={card.color}\r\n            digit={card.digit}\r\n            action={card.action}\r\n            width={200}\r\n            flip={card.flip}\r\n            rotationY={card.rotationY}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Root>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport Card from \"../../Shared/Card/Card\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  filter: ${(props) =>\r\n    props.highlight ? \"drop-shadow(0 0 10px white)\" : \"brightness(0.6)\"};\r\n\r\n  --cardsCnt: ${(props) => props.cardsCnt};\r\n  --containerMaxWidth: 55vw;\r\n  .card-container {\r\n    &:not(:last-of-type) {\r\n      margin-right: calc(\r\n        -1 * max(calc((\r\n                  var(--cardWidth) * var(--cardsCnt) - var(--containerMaxWidth)\r\n                ) / (var(--cardsCnt)-1)), calc(var(--cardWidth) / 3))\r\n      );\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CardsRow({ cards, cardProps, highlight }) {\r\n  return (\r\n    <Root layout cardsCnt={cards.length} highlight={highlight}>\r\n      {cards.map((card) => (\r\n        <div className=\"card-container\" key={card.layoutId}>\r\n          <Card\r\n            id={card.id}\r\n            layoutId={card.layoutId}\r\n            color={card.color}\r\n            digit={card.digit}\r\n            action={card.action}\r\n            width={200}\r\n            flip={card.flip}\r\n            rotationY={card.rotationY}\r\n            selectable={cardProps?.selectable}\r\n            playable={card.playable}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Root>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\nimport CardsRow from \"../CardsRow/CardsRow\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  bottom: -50px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  --cardWidth: var(--cardWidthBigger);\r\n`;\r\n\r\nexport default function PlayerStack() {\r\n  const { player, currentPlayer } = useSelector((state) => ({\r\n    player: state.game.players[0],\r\n    currentPlayer: state.game.currentPlayer,\r\n  }));\r\n  const cards = player?.cards || [];\r\n\r\n  return (\r\n    <Root>\r\n      <CardsRow\r\n        cards={cards}\r\n        highlight={currentPlayer === 0}\r\n        cardProps={{ selectable: true }}\r\n      />\r\n    </Root>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport Card from \"../../Shared/Card/Card\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  filter: ${(props) =>\r\n    props.highlight ? \"drop-shadow(0 0 10px white)\" : \"brightness(0.6)\"};\r\n\r\n  --cardHeight: calc(1.41 * var(--cardWidth));\r\n  --cardsCnt: ${(props) => props.cardsCnt};\r\n  --containerMaxHeight: 50vh;\r\n  .card-container {\r\n    &:not(:last-of-type) {\r\n      margin-bottom: calc(\r\n        -1 * max(calc((\r\n                  var(--cardHeight) * var(--cardsCnt) -\r\n                    var(--containerMaxHeight)\r\n                ) / (var(--cardsCnt)-1)), calc(var(--cardHeight) / 2))\r\n      );\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CardsColumn({ cards, highlight }) {\r\n  return (\r\n    <Root layout cardsCnt={cards.length} highlight={highlight}>\r\n      {cards.map((card) => (\r\n        <div className=\"card-container\" key={card.layoutId}>\r\n          <Card\r\n            layoutId={card.layoutId}\r\n            color={card.color}\r\n            digit={card.digit}\r\n            action={card.action}\r\n            width={200}\r\n            flip={card.flip}\r\n            rotationY={card.rotationY}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Root>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\nimport CardsColumn from \"../CardsColumn/CardsColumn\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport default function LeftStack() {\r\n  const { player, currentPlayer } = useSelector((state) => ({\r\n    player: state.game.players[1],\r\n    currentPlayer: state.game.currentPlayer,\r\n  }));\r\n  const cards = player?.cards || [];\r\n  return (\r\n    <Root>\r\n      <CardsColumn cards={cards} highlight={currentPlayer === 1} />\r\n    </Root>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\nimport CardsColumn from \"../CardsColumn/CardsColumn\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport default function RightStack() {\r\n  const { player, currentPlayer } = useSelector((state) => ({\r\n    player: state.game.players[3],\r\n    currentPlayer: state.game.currentPlayer,\r\n  }));\r\n  const cards = player?.cards || [];\r\n  return (\r\n    <Root>\r\n      <CardsColumn cards={cards} highlight={currentPlayer === 3} />\r\n    </Root>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\nimport CardsRow from \"../CardsRow/CardsRow\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 0;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport default function TopStack() {\r\n  const { player, currentPlayer } = useSelector((state) => ({\r\n    player: state.game.players[2],\r\n    currentPlayer: state.game.currentPlayer,\r\n  }));\r\n  const cards = player?.cards || [];\r\n  return (\r\n    <Root>\r\n      <CardsRow cards={cards} highlight={currentPlayer === 2} />\r\n    </Root>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../../Shared/Card/Card\";\r\n\r\nconst FrontCards = React.memo(function () {\r\n  return (\r\n    <>\r\n      {Array(5)\r\n        .fill(0)\r\n        .map((_, idx) => (\r\n          <div\r\n            className=\"card-container\"\r\n            key={idx}\r\n            style={{\r\n              transform: `translate(${Math.random() * 20 - 10}px,${\r\n                Math.random() * 20 - 10\r\n              }px)`,\r\n            }}\r\n          >\r\n            <Card />\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default FrontCards;\r\n","import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { canPlayCard } from \"../../BotsServer/BotsServer\";\r\nimport { wrapMod } from \"../../utils/helpers\";\r\nimport { Card, Player } from \"../../utils/interfaces\";\r\n\r\ninterface StoreState {\r\n  playerId: string;\r\n  currentPlayer: number;\r\n  nextPlayre: number;\r\n  orderOffset: number;\r\n  direction: number;\r\n  tableStack: Card[];\r\n  drawingStack: Card[];\r\n  players: Player[];\r\n  lastPlayerDrawed: boolean;\r\n  inGame: boolean;\r\n  inLobby: boolean;\r\n}\r\n\r\nlet cardLayoutIdIdx = 111;\r\n\r\nfunction generateDrawingCards(cnt: number) {\r\n  return Array(cnt)\r\n    .fill(0)\r\n    .map((i) => ({ layoutId: `id_${cardLayoutIdIdx++}` }));\r\n}\r\n\r\nconst initialState = {\r\n  tableStack: [] as Card[],\r\n  drawingStack: [] as Card[],\r\n  inGame: false,\r\n} as StoreState;\r\n\r\nexport const gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState,\r\n  reducers: {\r\n    setPlayerId(state, action: PayloadAction<string>) {\r\n      state.playerId = action.payload;\r\n    },\r\n    init: (\r\n      state,\r\n      action: PayloadAction<{ players: Player[]; cards: Card[] }>\r\n    ) => {\r\n      const { players, cards: startingCards } = action.payload;\r\n      state.direction = 1;\r\n      state.tableStack = [];\r\n      state.lastPlayerDrawed = false;\r\n      state.tableStack = [];\r\n      state.inGame = true;\r\n\r\n      // Find my player and re-order\r\n      let playersFinal: Player[] = [];\r\n      let myIdx = 0;\r\n      while (myIdx < players.length) {\r\n        if (players[myIdx].id === state.playerId) break;\r\n        myIdx++;\r\n      }\r\n\r\n      for (let i = myIdx; i < players.length; i++) {\r\n        playersFinal.push(players[i]);\r\n      }\r\n      state.currentPlayer = playersFinal.length % players.length;\r\n      for (let i = 0; i < myIdx; i++) {\r\n        playersFinal.push(players[i]);\r\n      }\r\n\r\n      //Set Cards for players\r\n      let cardsToDistribute: Card[] = startingCards.map((c) => ({\r\n        ...c,\r\n        layoutId: `id_${cardLayoutIdIdx++}`,\r\n        rotationY: 0,\r\n        playable: myIdx === 0,\r\n        forPlayer: 0,\r\n      }));\r\n\r\n      for (let i = 1; i < playersFinal.length; i++) {\r\n        cardsToDistribute = cardsToDistribute.concat(\r\n          Array(startingCards.length)\r\n            .fill(0)\r\n            .map(() => ({\r\n              layoutId: `id_${cardLayoutIdIdx++}`,\r\n              forPlayer: i,\r\n            }))\r\n        );\r\n      }\r\n      state.players = playersFinal;\r\n      state.drawingStack = cardsToDistribute.concat(generateDrawingCards(20));\r\n      state.orderOffset = myIdx;\r\n    },\r\n\r\n    ready(state) {\r\n      state.players = state.players.map((player, idx) => {\r\n        return {\r\n          ...player,\r\n          cards: state.drawingStack.filter((c) => c.forPlayer === idx),\r\n        };\r\n      });\r\n\r\n      state.drawingStack = state.drawingStack.filter((c) =>\r\n        isNullOrUndefined(c.forPlayer)\r\n      );\r\n    },\r\n\r\n    stopGame(state) {\r\n      state.inGame = false;\r\n    },\r\n\r\n    setInLobby(state, action: PayloadAction<boolean>) {\r\n      state.inLobby = action.payload;\r\n    },\r\n\r\n    moveCard(\r\n      state,\r\n      action: PayloadAction<{\r\n        nextPlayer: number;\r\n        card?: Card;\r\n        draw?: number;\r\n        cardsToDraw?: Card[];\r\n      }>\r\n    ) {\r\n      let { nextPlayer, card, cardsToDraw = [], draw } = action.payload;\r\n\r\n      const curPlayerObj = state.players[state.currentPlayer];\r\n\r\n      nextPlayer = wrapMod(\r\n        nextPlayer - state.orderOffset,\r\n        state.players.length\r\n      );\r\n\r\n      if (card?.action === \"reverse\") state.direction *= -1;\r\n\r\n      if (draw) {\r\n        state.players = state.players.map((p) => {\r\n          if (p.id === curPlayerObj.id) {\r\n            let newCards = state.drawingStack.slice(0, draw);\r\n            if (curPlayerObj.id === state.playerId && cardsToDraw) {\r\n              newCards = newCards.map((c, idx) => ({\r\n                ...c,\r\n                ...cardsToDraw[idx],\r\n                rotationY: 0,\r\n              }));\r\n            }\r\n            return {\r\n              ...p,\r\n              cards: p.cards.concat(newCards),\r\n            };\r\n          }\r\n          return p;\r\n        });\r\n        state.drawingStack = state.drawingStack\r\n          .slice(draw)\r\n          .concat(generateDrawingCards(draw));\r\n        state.lastPlayerDrawed = true;\r\n      }\r\n\r\n      if (card) {\r\n        let layoutId: string | undefined = \"\";\r\n        let shouldFlip = false;\r\n        if (curPlayerObj.id !== state.playerId) {\r\n          layoutId =\r\n            curPlayerObj.cards[\r\n              Math.floor(Math.random() * curPlayerObj.cards.length)\r\n            ].layoutId;\r\n          shouldFlip = true;\r\n        } else {\r\n          layoutId = curPlayerObj.cards.find((c) => c.id === card?.id)\r\n            ?.layoutId;\r\n          const cardToMove = curPlayerObj.cards.filter(\r\n            (c) => c.layoutId === layoutId\r\n          )[0];\r\n          console.log(layoutId, current(cardToMove));\r\n\r\n          card.color = cardToMove.color;\r\n          card.action = cardToMove.action;\r\n          card.digit = cardToMove.digit;\r\n        }\r\n\r\n        state.tableStack = [\r\n          ...state.tableStack.slice(-1),\r\n          {\r\n            layoutId,\r\n            color: card.color,\r\n            action: card.action,\r\n            digit: card.digit,\r\n            flip: shouldFlip,\r\n            rotationY: 0,\r\n          },\r\n        ];\r\n        state.players = state.players.map((p) => {\r\n          if (p === curPlayerObj) {\r\n            return {\r\n              ...p,\r\n              cards: p.cards.filter((c) => c.layoutId !== layoutId),\r\n            };\r\n          }\r\n          return p;\r\n        });\r\n        state.lastPlayerDrawed = false;\r\n      }\r\n\r\n      state.nextPlayre = nextPlayer;\r\n    },\r\n    movePlayer(state) {\r\n      state.players = state.players.map((p) => {\r\n        if (p.id === state.playerId) {\r\n          const myTurn = state.nextPlayre === 0;\r\n\r\n          return {\r\n            ...p,\r\n            cards: p.cards.map((c) => {\r\n              return {\r\n                ...c,\r\n                playable:\r\n                  myTurn &&\r\n                  canPlayCard(\r\n                    state.tableStack[state.tableStack.length - 1],\r\n                    c,\r\n                    state.lastPlayerDrawed\r\n                  ),\r\n              };\r\n            }),\r\n          };\r\n        }\r\n        return p;\r\n      });\r\n      state.currentPlayer = state.nextPlayre;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  init,\r\n  ready,\r\n  stopGame,\r\n  moveCard,\r\n  movePlayer,\r\n  setInLobby,\r\n  setPlayerId,\r\n} = gameSlice.actions;\r\n\r\nexport default gameSlice.reducer;\r\n","class _GameAudio {\r\n  musicVolume = 1;\r\n  effectsVolume = 1;\r\n  audioTracks = {};\r\n  musicPlaying;\r\n\r\n  preload(audioTracks, onload) {\r\n    this.audioTracks = audioTracks;\r\n    for (const url of Object.values(this.audioTracks)) {\r\n      var audio = new Audio();\r\n      audio.addEventListener(\r\n        \"canplaythrough\",\r\n        () => {\r\n          onload();\r\n        },\r\n        false\r\n      );\r\n      audio.src = url;\r\n    }\r\n  }\r\n\r\n  playMusic(name) {\r\n    if (!this.audioTracks[name])\r\n      throw new Error(\"No Audio Track with this name\");\r\n\r\n    if (this.musicPlaying) return;\r\n    this.musicPlaying = new Audio(this.audioTracks[name]);\r\n    this.musicPlaying.volume = this.musicVolume * 0.5;\r\n    this.musicPlaying.play();\r\n    this.musicPlaying.loop = true;\r\n  }\r\n\r\n  playAudio(name, reps = 1) {\r\n    if (!this.audioTracks[name])\r\n      throw new Error(\"No Audio Track with this name\");\r\n\r\n    for (let i = 0; i < reps; i++) {\r\n      setTimeout(() => {\r\n        let audio = new Audio(this.audioTracks[name]);\r\n        audio.volume = this.effectsVolume;\r\n        audio.play();\r\n      }, 200 * i);\r\n    }\r\n  }\r\n\r\n  changeMusicVolume(newVolume) {\r\n    this.musicVolume = newVolume;\r\n  }\r\n\r\n  changeEffectsVolume(newVolume) {\r\n    this.effectsVolume = newVolume;\r\n  }\r\n}\r\n\r\nconst GameAudio = new _GameAudio();\r\n\r\nexport default GameAudio;\r\n","import styled from \"styled-components\";\r\nimport Card from \"../../Shared/Card/Card\";\r\nimport FrontCards from \"./FrontCards\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../../utils/hooks\";\r\nimport { ready } from \"../../../stores/features/gameSlice\";\r\nimport API from \"../../../api/API\";\r\nimport GameAudio from \"../../../utils/audio\";\r\n\r\nconst variants = {\r\n  init: { x: 0, y: 0 },\r\n  idleCenter: { x: \"calc(50vw - 50%)\", y: \"calc(-1 * 50vh + 50% )\" },\r\n  idleCorner: { x: \"10px\", y: \"70px\" },\r\n  idleCornerDisabled: { x: \"10px\", y: \"80%\", transition: { duration: 1 } },\r\n\r\n  hover: { scale: 1.05, transition: { duration: 0.3 } },\r\n};\r\n\r\nconst Root = styled.div`\r\n  --cardWidth: var(--cardWidthBigger);\r\n\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  transform: translate(-50%, 50%);\r\n\r\n  width: var(--cardWidth);\r\n  height: calc(var(--cardWidth) * 1.41);\r\n  z-index: 10;\r\n\r\n  cursor: ${(props) => (props.canHover ? \"pointer\" : \"initial\")};\r\n  filter: ${(props) =>\r\n    !props.highlight ? \"contrast(.5)\" : \"drop-shadow(0 0 10px white)\"};\r\n\r\n  .card-container {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nexport default function DrawingStack() {\r\n  const { drawingStack, currentPlayer } = useSelector((state) => ({\r\n    drawingStack: state.game.drawingStack,\r\n    currentPlayer: state.game.currentPlayer,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (currentPlayer === 0) API.move(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => GameAudio.playAudio(\"shuffle\"), 1800);\r\n    setTimeout(() => {\r\n      dispatch(ready());\r\n      setGameStarted(true);\r\n    }, 2000);\r\n  }, [dispatch]);\r\n\r\n  const canHover = gameStarted && currentPlayer === 0;\r\n  const highlight = canHover || !gameStarted;\r\n\r\n  return (\r\n    <Root\r\n      as={motion.div}\r\n      onClick={handleClick}\r\n      canHover={canHover}\r\n      highlight={highlight}\r\n      gameStarted={gameStarted}\r\n      variants={variants}\r\n      initial=\"init\"\r\n      animate={\r\n        gameStarted\r\n          ? canHover\r\n            ? \"idleCorner\"\r\n            : \"idleCornerDisabled\"\r\n          : \"idleCenter\"\r\n      }\r\n      whileHover={canHover ? \"hover\" : { scale: 1 }}\r\n    >\r\n      {drawingStack.map((card) => (\r\n        <div className=\"card-container\" key={card.layoutId}>\r\n          <Card\r\n            layoutId={card.layoutId}\r\n            color={card.color}\r\n            digit={card.digit}\r\n            action={card.action}\r\n            width={200}\r\n            disableShadow={true}\r\n          />\r\n        </div>\r\n      ))}\r\n      <FrontCards />\r\n    </Root>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Cavatar = styled.div`\r\n  width: 100%;\r\n  min-width: 100px;\r\n  max-width: 120px;\r\n  border-radius: 50%;\r\n  border: 1px solid rgb(0 3 24);\r\n  position: relative;\r\n  padding-top: 100%;\r\n  box-shadow: 0px 0px 6px 3px rgb(23 25 41);\r\n\r\n  img {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 50%;\r\n\r\n    object-fit: cover;\r\n    object-position: top;\r\n  }\r\n`;\r\nconst Avatar = ({ seed }) => {\r\n  return (\r\n    <Cavatar>\r\n      <img src={`https://avatars.dicebear.com/api/male/${seed}.svg`} alt=\"\" />\r\n    </Cavatar>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button as MuiButton } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Cbutton = styled(MuiButton)`\r\n  &.MuiButton-root {\r\n    padding: 16px 36px;\r\n    text-transform: capitalize;\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    border: 1px solid rgb(2 15 108);\r\n    border-radius: 12px;\r\n    text-align: center;\r\n    color: white;\r\n    transition: transform 0.1s ease-in-out;\r\n    transition-timing-function: ease-out;\r\n    margin: 0;\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n\r\n    &:disabled {\r\n      opacity: 0.5;\r\n      pointer-events: none;\r\n    }\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n      transform: scale(1.05);\r\n      transition-timing-function: ease-in;\r\n      background-color: rgba(0, 0, 0, 0.4);\r\n    }\r\n\r\n    :active {\r\n      transform: scale(0.96);\r\n      transition-duration: 0.05s;\r\n    }\r\n  }\r\n`;\r\nconst Button = ({ children, href, ...props }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const onClick = () => {\r\n    console.log(props.disabled);\r\n    if (props.onClick) props.onClick();\r\n    if (href && !props.disabled) navigate(href);\r\n  };\r\n\r\n  return (\r\n    <Cbutton {...props} onClick={onClick}>\r\n      {children}\r\n    </Cbutton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport Avatar from \"../../Shared/Avatar/Avatar\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Button from \"../../Shared/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 40px 70px;\r\n  border-radius: 12px;\r\n  font-size: 2rem;\r\n  .row {\r\n    &.me {\r\n      color: yellow;\r\n\r\n      animation: pulse 1s infinite;\r\n    }\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 24px;\r\n\r\n    .order {\r\n      width: 50px;\r\n      font-size: 1.5rem;\r\n    }\r\n\r\n    .img {\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  @keyframes pulse {\r\n    50% {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Scoreboard({ players }) {\r\n  const playerId = useSelector((state) => state.game.playerId);\r\n\r\n  return (\r\n    <Root>\r\n      <Typography variant=\"h2\" textAlign=\"center\" fontWeight={600} mb={6}>\r\n        Game Finished!!\r\n      </Typography>\r\n      {players.map((p, idx) => (\r\n        <div className={`row ${p.id === playerId && \"me\"}`} key={idx}>\r\n          <div className=\"order\">{idx + 1}</div>\r\n          <div className=\"img\">\r\n            <Avatar seed={`${p.name}${p.img}`} />{\" \"}\r\n          </div>\r\n          <div className=\"name\">{p.name}</div>\r\n        </div>\r\n      ))}\r\n\r\n      <Grid container justifyContent=\"center\" mt={6}>\r\n        <Link to=\"/main-menu\">\r\n          <Button onClick={() => {}}>Play Again</Button>\r\n        </Link>\r\n      </Grid>\r\n    </Root>\r\n  );\r\n}\r\n","import { AnimateSharedLayout } from \"framer-motion\";\r\nimport TableStack from \"./TableStack/TableStack.jsx\";\r\nimport PlayerStack from \"./PlayerStack/PlayerStack.jsx\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LeftStack from \"./LeftStack/LeftStack.jsx\";\r\nimport RightStack from \"./RightStack/RightStack.jsx\";\r\nimport TopStack from \"./TopStack/TopStack.jsx\";\r\nimport DrawingStack from \"./DrawingStack/DrawingStack.jsx\";\r\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\r\nimport {\r\n  moveCard,\r\n  movePlayer,\r\n  stopGame,\r\n} from \"../../stores/features/gameSlice\";\r\nimport Scoreboard from \"./Scoreboard/Scoreboard.jsx\";\r\nimport { Player } from \"../../utils/interfaces.js\";\r\nimport API from \"../../api/API\";\r\nimport { Navigate, } from \"react-router\";\r\nimport GameAudio from \"../../utils/audio.js\";\r\n\r\nexport default function Game() {\r\n  const dispatch = useDispatch();\r\n  const [finished, setFinished] = useState(false)\r\n  const [playersOrder, setPlayersOrder] = useState<Player[]>([]);\r\n  const inGame = useSelector(state => state.game.inGame)\r\n\r\n\r\n  useEffect(() => {\r\n    const timeoutReady = setTimeout(() => {\r\n      API.emitReady()\r\n    }, 2000)\r\n    API.onMove(({ card, draw, cardsToDraw, nxtPlayer }) => {\r\n\r\n      dispatch(\r\n        moveCard({\r\n          nextPlayer: nxtPlayer,\r\n          card,\r\n          draw,\r\n          cardsToDraw,\r\n        })\r\n      );\r\n      if (draw) {\r\n        GameAudio.playAudio('draw', draw);\r\n      } else GameAudio.playAudio('play')\r\n      setTimeout(() => dispatch(movePlayer()), 500);\r\n    })\r\n\r\n    API.onFinishGame((players: Player[]) => {\r\n      setFinished(true);\r\n      setPlayersOrder(players);\r\n    })\r\n\r\n    return () => {\r\n      API.leaveServer();\r\n      dispatch(stopGame());\r\n      clearTimeout(timeoutReady)\r\n    }\r\n  }, [dispatch]);\r\n\r\n\r\n  if (!inGame) return <Navigate replace to=\"/main-menu\" />;\r\n\r\n  return (\r\n    <div>\r\n      <AnimateSharedLayout>\r\n        <TableStack />\r\n        <TopStack />\r\n        <LeftStack />\r\n        <RightStack />\r\n        <PlayerStack />\r\n        <DrawingStack />\r\n      </AnimateSharedLayout>\r\n\r\n      {finished && <Scoreboard players={playersOrder} />}\r\n    </div>\r\n  );\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Paper = styled.div`\r\n  background: var(--panel-bg);\r\n  margin: 20vh 5vw;\r\n  padding: 75px 42px 64px;\r\n  text-align: center;\r\n  min-height: 60vh;\r\n  border-radius: 1rem;\r\n  box-shadow: 1px 3px 18px rgb(0 6 50);\r\n  position: relative;\r\n\r\n  .uno-img {\r\n    width: 150px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n  }\r\n`;\r\n\r\nconst APaper = ({ children, ...props }) => {\r\n  return (\r\n    <Grid\r\n      as={motion.div}\r\n      initial={{ opacity: 0, x: 500 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      exit={{ opacity: 0, x: -500 }}\r\n      transition={{ duration: 0.7 }}\r\n      container\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      {...props}\r\n    >\r\n      <Grid item xs={12} md={10} lg={8}>\r\n        <Paper>\r\n          <img className=\"uno-img\" src=\"assets/images/uno-logo.png\" alt=\"\" />\r\n          {children}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default APaper;\r\n","import styled from \"styled-components\";\r\n\r\nconst CtextField = styled.input`\r\n  display: inline-block;\r\n  width: 75%;\r\n  height: 30%;\r\n  padding: 22px 32px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid rgb(2 15 108);\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  font-size: large;\r\n  color: var(--secondary);\r\n  box-shadow: inset 1px 3px 10px #1a1b35;\r\n\r\n  ::placeholder {\r\n    color: #fff;\r\n    opacity: 1;\r\n  }\r\n  :focus {\r\n    outline: 2px solid var(--secondary);\r\n    outline-offset: 2px;\r\n  }\r\n`;\r\nconst TextField = (props) => {\r\n  return <CtextField {...props} />;\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography as MuiTypography } from \"@mui/material\";\r\n\r\nconst Ctypography = styled(MuiTypography)`\r\n  color: white;\r\n  font-weight: bold;\r\n`;\r\nconst Typography = (props) => {\r\n  return <Ctypography {...props} />;\r\n};\r\n\r\nexport default Typography;\r\n","import React from \"react\";\r\n\r\nconst ReChoiceIcon = () => {\r\n  return (\r\n    <svg\r\n      style={{ width: \"60%\", filter: \"drop-shadow(0 0 3px white)\" }}\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"arrow-rotate-left\"\r\n      class=\"svg-inline--fa fa-arrow-rotate-left\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M480 256c0 123.4-100.5 223.9-223.9 223.9c-48.86 0-95.19-15.58-134.2-44.86c-14.14-10.59-17-30.66-6.391-44.81c10.61-14.09 30.69-16.97 44.8-6.375c27.84 20.91 61 31.94 95.89 31.94C344.3 415.8 416 344.1 416 256s-71.67-159.8-159.8-159.8C205.9 96.22 158.6 120.3 128.6 160H192c17.67 0 32 14.31 32 32S209.7 224 192 224H48c-17.67 0-32-14.31-32-32V48c0-17.69 14.33-32 32-32s32 14.31 32 32v70.23C122.1 64.58 186.1 32.11 256.1 32.11C379.5 32.11 480 132.6 480 256z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ReChoiceIcon;\r\n","import React from \"react\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"../Shared/TextField/TextField\";\r\nimport Avatar from \"../Shared/Avatar/Avatar\";\r\nimport Button from \"../Shared/Button/Button\";\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport ReChoiceIcon from \"./ReChoiceIcon\";\r\n\r\nconst CreateUser = () => {\r\n  const getLocalStorageName = () => {\r\n    if (localStorage.getItem(\"playerName\"))\r\n      return localStorage.getItem(\"playerName\");\r\n    else return \"\";\r\n  };\r\n  const getLocalStorageImg = () => {\r\n    if (localStorage.getItem(\"playerImg\"))\r\n      return JSON.parse(localStorage.getItem(\"playerImg\"));\r\n    else return Math.random() * 100;\r\n  };\r\n  const [playerName, setPlayerName] = React.useState(getLocalStorageName);\r\n  const [imgSeed, setImgSeed] = React.useState(getLocalStorageImg);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"playerName\", playerName);\r\n    localStorage.setItem(\"playerImg\", imgSeed);\r\n  }, [playerName, imgSeed]);\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Typography>Enter Your Name</Typography>\r\n        </Grid>\r\n        <Grid item xs={10} md={6}>\r\n          <TextField\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            value={playerName}\r\n            onChange={(e) => setPlayerName(e.target.value)}\r\n            pad\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n          xs={10}\r\n        >\r\n          <Grid item sx={11}>\r\n            <Avatar seed={`${playerName}${imgSeed}`} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <Button\r\n              onClick={() => setImgSeed((seed) => seed + 1)}\r\n              style={{\r\n                width: \"4vw\",\r\n                height: \"4vw\",\r\n                padding: \"35%\",\r\n              }}\r\n            >\r\n              <ReChoiceIcon />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          {playerName && imgSeed && (\r\n            <Button href=\"/main-menu\">\r\n              <Typography> Save & Go </Typography>\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Button from \"../Shared/Button/Button\";\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport API from \"../../api/API\";\r\nimport { useDispatch } from \"../../utils/hooks\";\r\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\r\nconst style = {\r\n  color: \"#fff\",\r\n};\r\n\r\nconst MainMenu = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const onPlayOnline = () => {\r\n    API.playOnline(true);\r\n  };\r\n\r\n  const onPlayOffline = async () => {\r\n    API.playOnline(false);\r\n    const playerId = await API.joinServer();\r\n    dispatch(setPlayerId(playerId));\r\n    dispatch(setInLobby(true));\r\n    navigate(\"/waiting-lobby\");\r\n  };\r\n\r\n  return (\r\n    <Paper key=\"main-menu\">\r\n      <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={4}>\r\n        <Grid item xs={10}>\r\n          <Typography fontSize={22}>Start Playing</Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          spacing={2}\r\n          sx={12}\r\n        >\r\n          <Grid item xs={12} md={5}>\r\n            <Button\r\n              disabled={!API.isOnline}\r\n              style={{ width: \"80%\" }}\r\n              href=\"/create-server\"\r\n              onClick={onPlayOnline}\r\n            >\r\n              <img src=\"assets/icons/add.svg\" alt=\"\" />\r\n              <Typography>Create A Game</Typography>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item sx={{ display: { xs: \"none\", md: \"initial\" } }} md={2}>\r\n            <Typography>OR</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={5}>\r\n            <Button\r\n              disabled={!API.isOnline}\r\n              style={{ width: \"80%\" }}\r\n              href=\"/join-server\"\r\n              onClick={onPlayOnline}\r\n            >\r\n              <img src=\"assets/icons/glob.svg\" alt=\"\" />\r\n              <Typography>Join A Game</Typography>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} md={5} mt={3}>\r\n            <Button style={{ width: \"80%\" }} onClick={onPlayOffline}>\r\n              <img src=\"assets/icons/tv.svg\" alt=\"\" />\r\n              <Typography>Play with PC</Typography>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container alignItems=\"center\" justifyContent=\"center\" mt={6}>\r\n          <Grid item xs={6}>\r\n            <Link style={style} to=\"/create-user\">\r\n              Profile Setting\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={12}\r\n        >\r\n          <Grid item xs={6}>\r\n            <a\r\n              style={style}\r\n              href=\"https://www.ultraboardgames.com/uno/game-rules.php\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Game Rules\r\n            </a>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport SwitchUnstyled, {\r\n  switchUnstyledClasses,\r\n} from \"@mui/core/SwitchUnstyled\";\r\n\r\nconst Root = styled(\"span\")`\r\n  font-size: 0;\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n  border: 2px solid rgb(2 15 108);\r\n  outline: 1px solid #f3f2f1;\r\n  box-shadow: 0px 0px 6px 3px rgb(2 15 108);\r\n  border-radius: 2rem;\r\n\r\n  & .${switchUnstyledClasses.track} {\r\n    background: #f7f7f7;\r\n    border-radius: 10px;\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n  }\r\n\r\n  & .${switchUnstyledClasses.thumb} {\r\n    display: block;\r\n    width: 14px;\r\n    height: 14px;\r\n    left: 27px;\r\n    top: 0px;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 3px 0 #ffb100;\r\n    background-color: rgb(2 15 108);\r\n    position: relative;\r\n    transition: all 200ms ease;\r\n  }\r\n\r\n  &.${switchUnstyledClasses.focusVisible} .${switchUnstyledClasses.thumb} {\r\n    background-color: rgba(255, 255, 255, 1);\r\n    box-shadow: 0 0 1px 8px rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  &.${switchUnstyledClasses.checked} {\r\n    .${switchUnstyledClasses.thumb} {\r\n      left: 2px;\r\n      top: 0px;\r\n      box-shadow: 0 0 3px 0 #ffb100;\r\n      background-color: rgb(2 15 108);\r\n    }\r\n\r\n    .${switchUnstyledClasses.track} {\r\n      background: #f7f7f7;\r\n    }\r\n  }\r\n\r\n  & .${switchUnstyledClasses.input} {\r\n    cursor: inherit;\r\n    position: absolute;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    z-index: 1;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport default function UnstyledSwitches(props) {\r\n  const label = { componentsProps: { input: { \"aria-label\": \"switch\" } } };\r\n\r\n  return (\r\n    <SwitchUnstyled component={Root} {...label} {...props} defaultChecked />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Button from \"../Shared/Button/Button\";\r\nimport TextField from \"../Shared/TextField/TextField\";\r\nimport Switch from \"../Shared/Switch/Switch\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport API from \"../../api/API.ts\";\r\n\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport { useDispatch } from \"../../utils/hooks\";\r\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\r\n\r\nconst CreateServer = () => {\r\n  const [serverName, setServerName] = React.useState(\"\");\r\n  const [serverPassword, setServerPassword] = React.useState(\"\");\r\n  const [isPrivate, setIsPrivate] = React.useState(true);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreateServer = async () => {\r\n    const playerId = await API.createServer(serverName, serverPassword);\r\n    dispatch(setPlayerId(playerId));\r\n    dispatch(setInLobby(true));\r\n    navigate(\"/waiting-lobby\");\r\n  };\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Stack justifyContent=\"center\" spacing={1} alignItems=\"center\">\r\n            <Typography>Choose A Server Name</Typography>\r\n\r\n            <TextField\r\n              label=\"server-name\"\r\n              value={serverName}\r\n              onChange={(e) => setServerName(e.target.value)}\r\n            />\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={10} sm={8} md={6} lg={5} marginTop={2}>\r\n          <Stack\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            gap=\"32px\"\r\n          >\r\n            <p\r\n              style={{\r\n                color: `${isPrivate ? \"white\" : \"gray\"}`,\r\n                textShadow: `${isPrivate ? \"0 0 3px white\" : \"\"}`,\r\n              }}\r\n            >\r\n              Private\r\n            </p>\r\n            <Switch\r\n              onChange={() => {\r\n                setIsPrivate(!isPrivate);\r\n                setServerPassword(\"\");\r\n              }}\r\n            />\r\n            <p\r\n              style={{\r\n                color: `${!isPrivate ? \"white\" : \"gray\"}`,\r\n                textShadow: `${!isPrivate ? \"0 0 3px white\" : \"\"}`,\r\n              }}\r\n            >\r\n              Public\r\n            </p>\r\n          </Stack>\r\n        </Grid>\r\n        {isPrivate && (\r\n          <Grid item xs={12} md={10} marginTop={2}>\r\n            <Stack justifyContent=\"center\" spacing={1} alignItems=\"center\">\r\n              <Typography>Server Password</Typography>\r\n\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"server-password\"\r\n                value={serverPassword}\r\n                onChange={(e) => setServerPassword(e.target.value)}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={12} md={10} lg={8}>\r\n          {((isPrivate && serverName && serverPassword) ||\r\n            (!isPrivate && serverName)) && (\r\n            <Button onClick={handleCreateServer}>Creat Server</Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreateServer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst CTableContainer = styled.div`\r\n  min-height: 35vh;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  border-radius: 1rem;\r\n\r\n  color: white;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 60px;\r\n  max-height: 500px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    background-color: #07caea;\r\n    border-radius: 0 1rem 1rem 0;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 1rem;\r\n    background-color: #0109f9;\r\n    border: 2px solid #07caea;\r\n  }\r\n  ::-webkit-scrollbar-track-piece {\r\n  }\r\n`;\r\nconst CTableHead = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  padding: 20px;\r\n`;\r\nconst CTableCell = styled.p`\r\n  border-bottom: 1px solid rgb(2 15 108);\r\n  color: #fff;\r\n`;\r\nconst CTableBody = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-rows: minmax(min-content, max-content);\r\n  padding: 0 20px 20px;\r\n`;\r\n\r\nconst Table = ({ children }) => {\r\n  return (\r\n    <CTableContainer>\r\n      <CTableHead>\r\n        <CTableCell>Server Name</CTableCell>\r\n        <CTableCell>Players Joined</CTableCell>\r\n        <CTableCell>Is Private</CTableCell>\r\n      </CTableHead>\r\n      <CTableBody>{children}</CTableBody>\r\n    </CTableContainer>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Table from \"../Shared/Table/Table\";\r\nimport Button from \"../Shared/Button/Button\";\r\nimport TextField from \"../Shared/TextField/TextField\";\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"../../utils/hooks\";\r\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\r\nimport API from \"../../api/API\";\r\n\r\nconst CTableRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  // display: grid;\r\n  // grid-template-columns: repeat(3, 1fr);\r\n  border-radius: 2rem;\r\n  height: 45px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst CTableCell = styled.p`\r\n  height: 30px;\r\n  width: calc(100% / 3);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst JoinServer = () => {\r\n  const [showPrivate, setShowPrivate] = React.useState(true);\r\n  const [selectedServer, setSelectedServer] = React.useState(null);\r\n\r\n  const [password, setPassword] = React.useState(null); //for show button\r\n  const [selectOne, setSelectOne] = React.useState(false); //for show button\r\n\r\n  const [isPrivate, setIsPrivate] = React.useState(false);\r\n  const [servers, setServers] = React.useState([]);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    API.playOnline(true);\r\n    (async () => {\r\n      const servers = await API.getServers();\r\n      setServers(servers);\r\n    })();\r\n    const interval = setInterval(async () => {\r\n      const servers = await API.getServers();\r\n      setServers(servers);\r\n    }, 4000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleJoinServer = async () => {\r\n    const serverId = servers[selectedServer].id;\r\n    const playerId = await API.joinServer(serverId, password);\r\n    dispatch(setPlayerId(playerId));\r\n    dispatch(setInLobby(true));\r\n    navigate(\"/waiting-lobby\");\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={5}>\r\n        <Grid item xs={12}>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"flex-end\"\r\n            spacing={2}\r\n          >\r\n            <p\r\n              style={{\r\n                color: `${showPrivate ? \" white\" : \"gray\"}`,\r\n                textShadow: `${showPrivate ? \"0 0 3px white\" : \"\"}`,\r\n              }}\r\n            >\r\n              Show Private Servers\r\n            </p>\r\n            <Checkbox\r\n              defaultChecked\r\n              color=\"info\"\r\n              onChange={() => {\r\n                setShowPrivate(!showPrivate);\r\n                setSelectedServer(null);\r\n                setSelectOne(false);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table>\r\n            {servers.map((server, index) => {\r\n              console.log(server);\r\n              return (\r\n                <CTableRow\r\n                  key={index}\r\n                  onClick={() => {\r\n                    setSelectedServer(index);\r\n                    setSelectOne(true);\r\n                    setPassword(\"\");\r\n                    if (server.isPrivate) setIsPrivate(true);\r\n                    else setIsPrivate(false);\r\n                  }}\r\n                  style={\r\n                    index === selectedServer && server.isPrivate\r\n                      ? {\r\n                          backgroundColor: \"rgba(0,0,0,.5)\",\r\n                          border: \" 1px solid #fb0303\",\r\n                          borderWidth: \"0 0 3px 2px\",\r\n                          borderRadius: \"1rem\",\r\n                          boxShadow: \"inset 1px 0 5px 1px black\",\r\n                        }\r\n                      : index === selectedServer\r\n                      ? {\r\n                          backgroundColor: \"rgba(0,0,0,.5)\",\r\n                          borderRadius: \"1rem\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {index === selectedServer && server.isPrivate ? (\r\n                    <>\r\n                      <CTableCell>{server.serverName}</CTableCell>\r\n                      <TextField\r\n                        type=\"password\"\r\n                        placeholder=\"Enter the server password\"\r\n                        style={{\r\n                          height: \"100%\",\r\n                          border: \"none\",\r\n                          background: \"none\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <CTableCell>{server.name}</CTableCell>\r\n                      <CTableCell>{server.cntPlayers}</CTableCell>\r\n                      <CTableCell>{server.isPrivate ? \"Yes\" : \"\"}</CTableCell>\r\n                    </>\r\n                  )}\r\n                </CTableRow>\r\n              );\r\n            })}\r\n          </Table>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {((selectOne && isPrivate && password) ||\r\n            (selectOne && !isPrivate)) && (\r\n            <Button onClick={handleJoinServer}>\r\n              <Typography>Join Game</Typography>\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default JoinServer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst CLoading = styled.span`\r\n  display: inline-block;\r\n  position: relative;\r\n  span {\r\n    animation: loading 1.2s ease-in-out infinite;\r\n    position: absolute;\r\n    width: 2px;\r\n    background-color: white;\r\n    box-shadow: 0 0 2px white;\r\n  }\r\n\r\n  span:nth-child(1) {\r\n    left: 5px;\r\n    animation-delay: -0.24s;\r\n    display: inline-block;\r\n  }\r\n\r\n  span:nth-child(2) {\r\n    left: 10px;\r\n    animation-delay: -0.12s;\r\n    display: inline-block;\r\n  }\r\n  span:nth-child(3) {\r\n    left: 15px;\r\n    animation-delay: 0s;\r\n    display: inline-block;\r\n  }\r\n  @keyframes loading {\r\n    0% {\r\n      top: -1px;\r\n      height: 1px;\r\n    }\r\n    50%,\r\n    100% {\r\n      top: -2px;\r\n      height: 2px;\r\n    }\r\n  }\r\n`;\r\nconst Loding = () => {\r\n  return (\r\n    <CLoading>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </CLoading>\r\n  );\r\n};\r\n\r\nexport default Loding;\r\n","import React, { useEffect } from \"react\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Avatar from \"../Shared/Avatar/Avatar\";\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Loding from \"./Loding\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\r\nimport { init, setInLobby } from \"../../stores/features/gameSlice\";\r\nimport { useNavigate, useLocation, Navigate } from \"react-router-dom\";\r\nimport API from \"../../api/API\";\r\n\r\nconst Span = styled.span`\r\n  color: #f37006;\r\n  text-shadow: 0 0 4px #f37006;\r\n  font-weight: bold;\r\n  font-size: larger;\r\n`;\r\n\r\nconst Lobby = () => {\r\n  const [players, setPlayers] = React.useState([]);\r\n\r\n  const inLobby = useSelector((state) => state.game.inLobby);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (!inLobby) return;\r\n\r\n    let timeout = null;\r\n    let unsubInit = null;\r\n    (async () => {\r\n      const serverPlayers = await API.getServerPlayers();\r\n      setPlayers(serverPlayers);\r\n      API.onPlayersUpdated((players) => setPlayers(players));\r\n      unsubInit = API.onGameInit(({ players, cards }) => {\r\n        dispatch(init({ cards, players }));\r\n        timeout = setTimeout(() => navigate(\"/game\"), 2000);\r\n      });\r\n    })();\r\n\r\n    return () => {\r\n      if (timeout) clearTimeout(timeout);\r\n      if (unsubInit) unsubInit();\r\n      dispatch(setInLobby(false));\r\n    };\r\n  }, [dispatch, navigate, inLobby]);\r\n\r\n  if (location.pathname === \"/waiting-lobby\" && !inLobby)\r\n    return <Navigate replace to=\"/main-menu\" />;\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={8}>\r\n          <Typography>\r\n            Waiting for Other Players To Join\r\n            <Loding />\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography>\r\n            Joined ( <Span>{players.length}</Span>/4 )\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          flexWrap=\"nowrap\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          spacing={0.5}\r\n          gap={6}\r\n          xs={12}\r\n        >\r\n          {players.map((player) => {\r\n            return (\r\n              <Stack\r\n                key={player.id}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n              >\r\n                <Avatar seed={`${player.name}${player.img}`} />\r\n                <Typography>{player.name}</Typography>\r\n              </Stack>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport gameSlice from \"./features/gameSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameSlice,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { Typography } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Root = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  cursor: pointer;\r\n\r\n  .img {\r\n    width: 80%;\r\n    max-width: 500px;\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .text {\r\n    text-shadow: 1px 3px 16px black;\r\n  }\r\n`;\r\n\r\nexport default function StartPage() {\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (localStorage.getItem(\"playerName\")) navigate(\"/main-menu\");\r\n      else navigate(\"/create-user\");\r\n    }, 3000);\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <Root\r\n      as={motion.div}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      exit={{ opacity: 0, x: -500 }}\r\n      transition={{ duration: 0.7 }}\r\n    >\r\n      <motion.div\r\n        initial={{ y: \"-100%\", opacity: 0 }}\r\n        animate={{\r\n          opacity: 1,\r\n          y: 0,\r\n          transition: { type: \"spring\", stiffness: 100, duration: 1 },\r\n        }}\r\n        className=\"img\"\r\n      >\r\n        <img src=\"assets/images/uno-logo.png\" alt=\"UNO Logo\" />\r\n      </motion.div>\r\n      <Typography\r\n        variant=\"h4\"\r\n        mt={8}\r\n        className=\"text\"\r\n        component={motion.h3}\r\n        initial={{\r\n          opacity: 0,\r\n          y: 100,\r\n        }}\r\n        animate={\r\n          mounted\r\n            ? {\r\n                opacity: 1,\r\n                y: [0, -10, 0],\r\n                transition: {\r\n                  repeat: Infinity,\r\n                  duration: 0.9,\r\n                  times: [0.4, 0.6, 1],\r\n                  ease: \"easeInOut\",\r\n                },\r\n              }\r\n            : {\r\n                opacity: 1,\r\n                y: 0,\r\n                transition: {\r\n                  type: \"spring\",\r\n                  stiffness: 100,\r\n                  duration: 1,\r\n                  delay: 1,\r\n                },\r\n              }\r\n        }\r\n        onAnimationComplete={() => setMounted(true)}\r\n      >\r\n        Welcome to UNO The Game\r\n      </Typography>\r\n    </Root>\r\n  );\r\n}\r\n","import GameAudio from \"./audio\";\r\nimport { EventsObject } from \"./EventsObject\";\r\n\r\nclass _Loader extends EventsObject {\r\n  imgs = [\r\n    \"assets/images/backside.png\",\r\n    \"assets/images/uno-logo.png\",\r\n    \"assets/images/draw four-blank.png\",\r\n    \"assets/images/draw two-blank.png\",\r\n    \"assets/images/draw two-blue.png\",\r\n    \"assets/images/draw two-green.png\",\r\n    \"assets/images/draw two-red.png\",\r\n    \"assets/images/draw two-yellow.png\",\r\n    \"assets/images/draw4.png\",\r\n    \"assets/images/front-black.png\",\r\n    \"assets/images/front-blue.png\",\r\n    \"assets/images/front-green.png\",\r\n    \"assets/images/front-red.png\",\r\n    \"assets/images/front-yellow.png\",\r\n    \"assets/images/reverse-blank.png\",\r\n    \"assets/images/reverse-blue.png\",\r\n    \"assets/images/reverse-green.png\",\r\n    \"assets/images/reverse-red.png\",\r\n    \"assets/images/reverse-yellow.png\",\r\n    \"assets/images/skip-blank.png\",\r\n    \"assets/images/skip-blue.png\",\r\n    \"assets/images/skip-green.png\",\r\n    \"assets/images/skip-red.png\",\r\n    \"assets/images/skip-yellow.png\",\r\n    \"assets/images/wild.png\",\r\n  ];\r\n  audios = {\r\n    music: \"assets/audio/bg-music.mp3\",\r\n    shuffle: \"assets/audio/shuffle.mp3\",\r\n    play: \"assets/audio/play.mp3\",\r\n    draw: \"assets/audio/draw.mp3\",\r\n  };\r\n\r\n  totalCnt = 0;\r\n  loadedCnt = 0;\r\n\r\n  constructor() {\r\n    super();\r\n    this.onProgress = this.onProgress.bind(this);\r\n  }\r\n\r\n  load() {\r\n    this.totalCnt = this.imgs.length + Object.keys(this.audios).length;\r\n    this.loadedCnt = 0;\r\n\r\n    GameAudio.preload(this.audios, this.onProgress);\r\n\r\n    for (const img of this.imgs) {\r\n      this.preloadImage(img);\r\n    }\r\n  }\r\n\r\n  preloadImage(url: string) {\r\n    try {\r\n      var _img = new Image();\r\n      _img.src = url;\r\n      _img.onload = this.onProgress;\r\n    } catch (e) {\r\n      console.error(\"Failed Loading Images\");\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  onProgress() {\r\n    this.loadedCnt++;\r\n    this.fireEvent(\"progress\", this.loadedCnt / this.totalCnt);\r\n    if (this.loadedCnt === this.totalCnt) this.fireEvent(\"completed\");\r\n  }\r\n}\r\n\r\nconst Loader = new _Loader();\r\nexport default Loader;\r\n","import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../../utils/loader\";\r\n\r\nconst Root = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: black;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n\r\n  h2 {\r\n    text-align: center;\r\n    margin-bottom: 36px;\r\n    font-size: 10vmin;\r\n  }\r\n\r\n  p {\r\n    font-size: 5vmin;\r\n    text-shadow: 0 0 10px white;\r\n    animation: animateText 2s infinite ease-in-out;\r\n  }\r\n\r\n  @keyframes animateText {\r\n    50% {\r\n      text-shadow: 0 0 15px white;\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Loading({ onLoaded }) {\r\n  const [percentage, setPercentage] = useState(3);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Loader.load();\r\n    Loader.addEventListener(\"progress\", (value) => {\r\n      setPercentage(Math.round(100 * value));\r\n    });\r\n\r\n    Loader.addEventListener(\"completed\", () => {\r\n      setCompleted(true);\r\n    });\r\n  }, []);\r\n\r\n  const onClick = () => {\r\n    if (completed) {\r\n      onLoaded();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root onClick={onClick}>\r\n      {completed ? (\r\n        <>\r\n          <h2>Ready!!</h2>\r\n          <p>Click Anywhere to Start</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Loading Game Assets...</h2>\r\n          <p>{percentage}%</p>\r\n        </>\r\n      )}\r\n    </Root>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: white;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  h2 {\r\n    font-size: 5vmin;\r\n  }\r\n\r\n  p {\r\n    margin-top: 24px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  button {\r\n  }\r\n`;\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo,\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      // Error path\r\n      return (\r\n        <Root>\r\n          <h2>\r\n            Oooop....\r\n            <br />\r\n            Something went wrong :(\r\n          </h2>\r\n          <p>We are very sorry for that, please reload the page</p>\r\n          <Button href=\"/main-menu\">Reload Page</Button>\r\n          {/* <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details> */}\r\n        </Root>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Game from \"./Components/Game/Game\";\r\nimport CreateUser from \"./Components/CreateUser/CreateUser\";\r\nimport MainMenu from \"./Components/MainMenu/MainMenu\";\r\nimport CreateServer from \"./Components/CreateServer/CreateServer\";\r\nimport JoinServer from \"./Components/JoinServer/JoinServer\";\r\nimport Lobby from \"./Components/WaitingLobby/Lobby\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./stores/store\";\r\nimport { useState } from \"react\";\r\nimport StartPage from \"./Components/StartPage/StartPage\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Loading from \"./Components/Shared/Loading/Loading\";\r\nimport GameAudio from \"./utils/audio\";\r\nimport ErrorBoundary from \"./Components/Shared/ErrorBoundary/ErrorBoundary\";\r\n\r\nconst Root = styled.div`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  overflow-x: hidden;\r\n  /* background: radial-gradient(#5065da, #20295a); */\r\n  background: radial-gradient(#3d50ba, #161d3f);\r\n`;\r\n\r\n// screen.lockOrientation(\"landscape\");\r\n\r\nfunction App() {\r\n  const [loadingAssets, setLoadingAssets] = useState(true);\r\n\r\n  const location = useLocation();\r\n\r\n  const onLoaded = () => {\r\n    GameAudio.playMusic(\"music\");\r\n    setLoadingAssets(false);\r\n  };\r\n\r\n  if (loadingAssets) return <Loading onLoaded={onLoaded} />;\r\n\r\n  return (\r\n    <Root>\r\n      <Provider store={store}>\r\n        <AnimatePresence exitBeforeEnter>\r\n          <ErrorBoundary>\r\n            <Routes location={location} key={location.key}>\r\n              <Route\r\n                key={\"/create-user\"}\r\n                path=\"/create-user\"\r\n                element={<CreateUser />}\r\n              />\r\n              <Route\r\n                key={\"/main-menu\"}\r\n                path=\"/main-menu\"\r\n                element={<MainMenu />}\r\n              />\r\n              <Route\r\n                key={\"/create-server\"}\r\n                path=\"/create-server\"\r\n                element={<CreateServer />}\r\n              />\r\n              <Route\r\n                key={\"/join-server\"}\r\n                path=\"/join-server\"\r\n                element={<JoinServer />}\r\n              />\r\n              <Route key={\"/game\"} path=\"/game\" element={<Game />} />\r\n              <Route\r\n                key={\"/waiting-lobby\"}\r\n                path=\"/waiting-lobby\"\r\n                element={<Lobby />}\r\n              />\r\n              <Route key={\"/\"} path=\"/\" element={<StartPage />} />\r\n            </Routes>\r\n          </ErrorBoundary>\r\n        </AnimatePresence>\r\n      </Provider>\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter\r\n      basename={process.env.NODE_ENV === \"production\" ? \"/uno\" : \"/\"}\r\n    >\r\n      <CssBaseline />\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}